@using ContactManager.Data

<div class="modal-body">
	<h4>@(Model.Id != Guid.Empty ? "Edit Contact" : "New Contact")</h4>
	<table class="table">
		<tbody>
			<tr>
				<td>
					<label for="editContactTitle">Title*</label>
					<input id="editContactTitle" type="text" class="form-control" value="@Model.Title" placeholder="Title">
					<div id="invalidTitleFeedback" class="invalidMessage">Please provide a Title.</div>
				</td>
				<td>
					<label for="editContactFirstName">First Name*</label>
					<input id="editContactFirstName" type="text" class="form-control" value="@Model.FirstName" placeholder="First Name">
					<div id="invalidFirstNameFeedback" class="invalidMessage">Please provide a valid First Name.</div>
				</td>
				<td>
					<label for="editContactLastName">Last Name*</label>
					<input id="editContactLastName" type="text" class="form-control" value="@Model.LastName" placeholder="Last Name">
					<div id="invalidLastNameFeedback" class="invalidMessage">Please provide a valid Last Name.</div>
				</td>
				<td>
					<label for="editContactDOB">Date of Birth*</label>
					<input id="editContactDOB" type="date" class="form-control" value="@Model.DOB.ToString("yyyy-MM-dd")">
					<div id="invalidDOBFeedback" class="invalidMessage">Please provide a valid Date of Birth.</div>
				</td>
			</tr>
		</tbody>
	</table>
</div>


<h6>Email(s)</h6>

<div class="row">
	<div class="form-group col-md-12">
		<table id="emailList" class="table table-responsive-md hoverHighlightTable">
			<thead>
				<tr>
					<th>Email Address</th>
					<th class="text-center">Type</th>
					<th class="text-center">Primary</th>
					<th class="text-center">Actions</th>
				</tr>
			</thead>
			<tbody>
				@if (Model.EmailAddresses != null)
				{
					foreach (var emailAddress in Model.EmailAddresses)
					{
						<tr class="emailListItem" data-email="@emailAddress.Email" data-type="@emailAddress.Type">
							<td>@emailAddress.Email</td>
							<td class="text-center">
								@if (emailAddress.Type == EmailType.Personal)
								{
									<span class="badge badge-primary">Personal</span>
								}
								else
								{
									<span class="badge badge-success">Business</span>
								}
							</td>
							<td class="text-center">
								@if (emailAddress.Email == Model.PrimaryEmail)
								{
									<span class="badge badge-success primary-indicator">Yes</span>
								}
								else
								{
									<span class="primary-indicator">No</span>
								}
							</td>
							<td class="text-center">
								<a class="redText pointer" title="Delete Email">X</a>
							</td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="4" class="text-center">No email addresses available.</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<div class="row">
	<div class="form-group col-md-6">
		<input id="newEmailAddress" type="email" placeholder="Email" class="form-control">
		<div id="invalidEmailFeedback" class="invalidMessage">
			Please provide a valid email.
		</div>
	</div>
	<div class="form-group col-md-4">
		<select id="newEmailAddressType" class="form-control">
			<option value="Personal">Personal</option>
			<option value="Business">Business</option>
		</select>
	</div>
	<div class="form-group col-md-2">
		<button id="addNewEmail" class="btn btn-info">Add</button>
	</div>
</div>

<h6>Address(s)</h6>

<div class="row">
	<div class="form-group col-md-12">
		<table id="addressTable" class="table table-responsive-md">
			<thead>
				<tr>
					<th>Street</th>
					<th>City</th>
					<th>State</th>
					<th>Zip</th>
					<th class="text-center">Type</th>
					<th class="text-center">Actions</th>
				</tr>
			</thead>
			<tbody>
				@if (Model.Addresses != null)
				{
					foreach (var address in Model.Addresses)
					{
						<tr class="addressListItem" data-street1="@address.Street1" data-street2="@address.Street2" data-city="@address.City" data-state="@address.State" data-zip="@address.Zip" data-type="@address.Type">
							<td>@address.Street1 @address.Street2</td>
							<td>@address.City</td>
							<td>@address.State</td>
							<td>@address.Zip</td>
							<td class="text-center">
								@if (address.Type == AddressType.Primary)
								{
									<span class="badge badge-primary">Primary</span>
								}
								else
								{
									<span class="badge badge-success">@address.Type</span>
								}
							</td>
							<td class="text-center">
								<a class="redText pointer" title="Delete Address">X</a>
							</td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="6" class="text-center">No addresses available.</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>


<div class="row">
	<div class="form-group col-md-4">
		<input id="newAddressStreet1" type="text" placeholder="Street1" class="form-control addressInput">
		<div id="invalidAddressStreet1Feedback" class="invalidMessage">
			Please provide a valid Street.
		</div>
	</div>
	<div class="form-group col-md-4">
		<input id="newAddressStreet2" type="text" placeholder="Street2" class="form-control addressInput">
	</div>
	<div class="form-group col-md-4">
		<input id="newAddressCity" type="text" placeholder="City" class="form-control addressInput">
		<div id="invalidAddressCityFeedback" class="invalidMessage">
			Please provide a valid City.
		</div>
	</div>
	<div class="form-group col-md-4">
		<input id="newAddressState" type="text" placeholder="State" class="form-control addressInput">
		<div id="invalidAddressStateFeedback" class="invalidMessage">
			Please provide a valid State.
		</div>
	</div>
	<div class="form-group col-md-4">
		<input id="newAddressZip" type="number" placeholder="Zip" class="form-control addressInput">
		<div id="invalidAddressZipFeedback" class="invalidMessage">
			Please provide a valid Zip.
		</div>
	</div>
	<div class="form-group col-md-2">
		<select id="newAddressType" class="form-control">
			<option value="Primary">Primary</option>
			<option value="Business">Business</option>
		</select>
	</div>
	<div class="form-group col-md-2">
		<button id="addNewAddress" class="btn btn-info">Add</button>
	</div>
</div>

@if (Model.Id != Guid.Empty)
{
	<input type="hidden" id="contactId" name="contactId" value="@Model.Id">
}
@if (!String.IsNullOrEmpty(Model.PrimaryEmail))
{
	<input type="hidden" id="primaryEmailInput" name="primaryEmail" value="@Model.PrimaryEmail">
}

<div class=" text-right">
	<button class="btn btn-default" data-dismiss="modal">Cancel</button>
	<button id="saveContactButton" class="btn btn-success">Save</button>
</div>
	</div>